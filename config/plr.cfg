[force_move]
enable_force_move: True

[gcode_macro save_last_file]
gcode:
 
  {% set svv = printer.save_variables.variables %}

  {% set filepath=printer.virtual_sdcard.file_path %}

  {% set filename=filepath.split('/')%}

  M117 file: { filename[-1] }
  M118 file: { filename[-1] }

  SAVE_VARIABLE VARIABLE=last_file VALUE='"{ filename[-1] }"'
  SAVE_VARIABLE VARIABLE=was_interrupted VALUE=false
  SAVE_VARIABLE VARIABLE=print_temp VALUE={printer.extruder.target}



 
[gcode_macro clear_last_file]
gcode:
  {% set filename='' %}
  SAVE_VARIABLE VARIABLE=last_file VALUE='"{ filename }"'
  SAVE_VARIABLE VARIABLE=was_interrupted VALUE=False

##################################################
[virtual_sdcard]
path: /home/pi/printer_data/gcodes
##################################################


[gcode_shell_command POWER_LOSS_RESUME]

##################################################
command: sh /home/pi/printer_data/config/plr.sh
##################################################

timeout: 5.
verbose: True

[delayed_gcode _check_was_interrupted]
initial_duration: 1
gcode:
  M117 Verifico presenza di stampe interrotte . . .
  M118 Verifico presenza di stampe interrotte . . .

  {% if printer.save_variables.variables.was_interrupted|lower == 'true'  %}
    M21
    M117 c'e' una stampa interrotta . . .
    M118 c'e' una stampa interrotta . . . 
    G4 P3000
    _CHECK_RESUME_INTERRUPTED
    SAVE_VARIABLE VARIABLE=was_interrupted VALUE=False
  {% else %}
    M117 Nessuna stampa interrota . . .
    M118 Nessuna stampa interrota . . .
  {% endif %}  

   
[delayed_gcode _lampeggia_led]
initial_duration: 0
gcode:  
 {% set curr = printer["gcode_macro _CHECK_RESUME_INTERRUPTED"].start|int %}
   SET_GCODE_VARIABLE MACRO=_CHECK_RESUME_INTERRUPTED VARIABLE=start VALUE={curr + 1}
  {% if curr > 10 %}
    UPDATE_DELAYED_GCODE ID=_lampeggia_led DURATION=0
    set_led_white
  {% else %}
    set_led_green
    G4 P1000
    Set_led_red
    G4 P1000
    UPDATE_DELAYED_GCODE ID=_lampeggia_led DURATION=0.1
  {% endif %}


[gcode_macro _CHECK_RESUME_INTERRUPTED]
variable_start: 0
gcode:
    UPDATE_DELAYED_GCODE ID=_lampeggia_led DURATION=0.1
    {% set z_height = params.Z_HEIGHT|default(printer.save_variables.variables.power_resume_z)|float %}
    {% set last_file = params.GCODE_FILE|default(printer.save_variables.variables.last_file)|string %}
    {% set print_temp = params.PRINT_TEMP|default(printer.save_variables.variables.print_temp)|float %}
    {% set layer_height = params.LAYER_HEIGHT|default(printer.save_variables.variables.layer_height)|float %}
    {% set actual_bed_temp = params.ACTUAL_BED_TEMP|default(printer.heater_bed.temperature)|float %}
    ### qui inserite la vostra macro di prestampa, tipo: prime_line, prime_blob ecc, per lo spurgo e pulitura ugello!
    ### la mia macro infatti si chiama 'prime_blob' (inserite anche i 2 apostrofi)
    {% set macro = params.MACRO|default('prime_blob') %}
    
    {% if actual_bed_temp > 40 %}
      M118 Piatto ancora caldo, si consiglia si continuare la stampa dall' ultimo layer (macro: RESUME_INTERRUPTED)...
      G4 P3000
    {% else %}
      M118 Piatto troppo freddo, si consiglia di staccare il pezzo e stampare da 0 la parte mancante (macro: RESTART_INTERRUPTED)...
      G4 P3000
    {% endif %}  

[gcode_macro RESUME_INTERRUPTED]
gcode:
    UPDATE_DELAYED_GCODE ID=_lampeggia_led DURATION=0.1
    {% set z_height = params.Z_HEIGHT|default(printer.save_variables.variables.power_resume_z)|float %}
    {% set last_file = params.GCODE_FILE|default(printer.save_variables.variables.last_file)|string %}
    {% set print_temp = params.PRINT_TEMP|default(printer.save_variables.variables.print_temp)|float %}
    {% set layer_height = params.LAYER_HEIGHT|default(printer.save_variables.variables.layer_height)|float %}
    {% set actual_bed_temp = params.ACTUAL_BED_TEMP|default(printer.heater_bed.temperature)|float %}
    {% set macro = params.MACRO|default('prime_blob') %}
    
    #{% if actual_bed_temp > 40 %}
    {% set layer_height=0 %}
    #  M118 Piatto ancora caldo, si puo continuare la stampa dall' ultimo layer...
    #  G4 P3000
    #{% else %}
    #  M118 Piatto troppo freddo, stacca il pezzo e stampa da 0 la parte mancante...
    #  G4 P3000
    #{% endif %}  
    M118 Continuo a stampare la parte mancante del pezzo da ultimo layer al pezzo stampato sul piatto...
    G4 P3000
   ### m117  RUN_SHELL_COMMAND CMD=POWER_LOSS_RESUME PARAMS="{z_height} {last_file} {print_temp} {layer_height} {actual_bed_temp} {macro}"
   ### m118  RUN_SHELL_COMMAND CMD=POWER_LOSS_RESUME PARAMS="{z_height} {last_file} {print_temp} {layer_height} {actual_bed_temp} {macro}"

    RUN_SHELL_COMMAND CMD=POWER_LOSS_RESUME PARAMS="{z_height} '{last_file}' {print_temp} {layer_height} {actual_bed_temp} {macro}"
    SDCARD_PRINT_FILE FILENAME=plr.gcode

[gcode_macro RESTART_INTERRUPTED]
gcode:
    UPDATE_DELAYED_GCODE ID=_lampeggia_led DURATION=0.1
    {% set z_height = params.Z_HEIGHT|default(printer.save_variables.variables.power_resume_z)|float %}
    {% set last_file = params.GCODE_FILE|default(printer.save_variables.variables.last_file)|string %}
    {% set print_temp = params.PRINT_TEMP|default(printer.save_variables.variables.print_temp)|float %}
    {% set layer_height = params.LAYER_HEIGHT|default(printer.save_variables.variables.layer_height)|float %}
    {% set actual_bed_temp = params.ACTUAL_BED_TEMP|default(printer.heater_bed.temperature)|float %}
    {% set macro = params.MACRO|default('prime_blob') %}
    
    #{% if actual_bed_temp > 40 %}
    #{% set layer_height=0 %}
    #  M118 Piatto ancora caldo, si puo continuare la stampa dall' ultimo layer...
    #  G4 P3000
    #{% else %}
    #  M118 Piatto troppo freddo, stacca il pezzo e stampa da 0 la parte mancante...
    #  G4 P3000
    #{% endif %}  
    M118 Ristampo la parte mancante del pezzo da 0...
    G4 P3000
   ### m117  RUN_SHELL_COMMAND CMD=POWER_LOSS_RESUME PARAMS="{z_height} {last_file} {print_temp} {layer_height} {actual_bed_temp} {macro}"
   ### m118  RUN_SHELL_COMMAND CMD=POWER_LOSS_RESUME PARAMS="{z_height} {last_file} {print_temp} {layer_height} {actual_bed_temp} {macro}"

    RUN_SHELL_COMMAND CMD=POWER_LOSS_RESUME PARAMS="{z_height} '{last_file}' {print_temp} {layer_height} {actual_bed_temp} {macro}"
    SDCARD_PRINT_FILE FILENAME=plr.gcode


[gcode_macro LOG_Z]
variable_valore: 0
gcode:
    {% set z_pos = printer.gcode_move.gcode_position.z %} #z_pos=4.40, il valore prima era 4.20
    {% set newz = printer["gcode_macro LOG_Z"].valore|round(2, 'common')   %}
    {% set layer_height=(z_pos-newz)| round(2, 'common')  %} #layer_height=4.40-4.20=0.20... l'altezza di ogni layer infatti Ã¨ 0.2mm
    SET_GCODE_VARIABLE MACRO=LOG_Z VARIABLE=valore VALUE={z_pos} #qui la variabile valore ha ancora altezza precedente, quindi 4.20...
    SAVE_VARIABLE VARIABLE=power_resume_z VALUE={z_pos}
    SAVE_VARIABLE VARIABLE=was_interrupted VALUE=True
    SAVE_VARIABLE VARIABLE=print_temp VALUE={printer.extruder.target}
    SAVE_VARIABLE VARIABLE=layer_height VALUE={layer_height}


[save_variables]
filename = /home/pi/printer_data/config/saved_variables.cfg

#[menu __main __sdcard __resumefailed]
#type: command
#enable: {('virtual_sdcard' in printer) and printer.virtual_sdcard.file_path and printer.save_variables.variables.was_interrupted and not printer.virtual_sdcard.is_active}
#name: Resume failed
#gcode: RESUME_INTERRUPTED GCODE_FILE={printer.virtual_sdcard.file_pa
